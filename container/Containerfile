# This Dockerfile performs a multi-stage build. BUILDER_IMAGE is the image used
# to compile the zkcloudd binary. RUNTIME_IMAGE is the image that will be
# returned with the final zkcloudd binary.
#
# Separating the builder and runtime image allows the runtime image to be
# considerably smaller because it doesn't need to have Golang installed.
ARG BUILDER_IMAGE=docker.io/golang:1.24.0-alpine3.21
ARG RUNTIME_IMAGE=docker.io/alpine:3.21
ARG PREVIOUS_VERSION=latest
ARG VERSION=next
ARG TARGETOS=linux
ARG TARGETARCH=amd64


######################################################################################
# Stage 1: Build the zkcloudd binary inside a builder image that will be discarded later.
# Ignore hadolint rule because hadolint can't parse the variable.
# See https://github.com/hadolint/hadolint/issues/339
# hadolint ignore=DL3006
FROM --platform=$BUILDPLATFORM ${BUILDER_IMAGE} AS builder
ARG VERSION

ENV GO111MODULE=on
# hadolint ignore=DL3018
RUN apk update && apk add --no-cache \
    gcc \
    file \
    git \
    # linux-headers are needed for Ledger support
    linux-headers \
    make \
    musl-dev

WORKDIR /app

# Copy go mod files first
COPY go.mod go.sum ./
RUN go mod download

# Then copy the rest of the source code
COPY app/ /app/app/
COPY cmd/ /app/cmd/
COPY proto/ /app/proto/
COPY tools/ /app/tools/
COPY docs/ /app/docs/
COPY buf.work.yaml config.yml Makefile /app/
COPY .git/ /app/.git/

RUN uname -a &&\
    echo "Building with VERSION=${VERSION}" &&\
    GOOS=${TARGETOS} GOARCH=${TARGETARCH} \
    make build VERSION="${VERSION}" && \
    ./zkcloudd version && \
    file ./zkcloudd && \
    ldd ./zkcloudd


######################################################################################
# Stage 2: Pull old zkcloud image (live by default)

# This is how it should be done when actually releasing this image
FROM quay.io/thezkcloud/node:${PREVIOUS_VERSION} AS zkcloud-old

######################################################################################
# Stage 3: Finally create a minimal image to compose cosmovisor & all zkcloud binaries in one.

# Ignore hadolint rule because hadolint can't parse the variable.
# See https://github.com/hadolint/hadolint/issues/339
# hadolint ignore=DL3006
FROM ${RUNTIME_IMAGE} AS runtime
ARG VERSION
ARG PREVIOUS_VERSION

ENV ZKCLOUD_HOME=/root/.zkcloud
ENV DAEMON_HOME=${ZKCLOUD_HOME}
ENV DAEMON_NAME=zkcloudd
ENV DAEMON_ALLOW_DOWNLOAD_BINARIES=false

# hadolint ignore=DL3018
RUN apk update && apk add --no-cache \
    bash \
    catatonit \
    curl \
    jq

# install cosmovisor
ADD https://github.com/cosmos/cosmos-sdk/releases/download/cosmovisor%2Fv1.5.0/cosmovisor-v1.5.0-linux-amd64.tar.gz /tmp/cosmovisor.tar.gz
RUN tar -xvzf /tmp/cosmovisor.tar.gz -C /bin && rm -f /tmp/cosmovisor.tar.gz

# Copy over the old binary as genesis binary into the cosmovisor directory
RUN mkdir -p /app/cosmovisor/genesis/bin
COPY --from=zkcloud-old /bin/zkcloudd /app/cosmovisor/genesis/bin/zkcloudd

# Copy the zkcloudd binary from the builder into the final image.
RUN mkdir -p /app/cosmovisor/upgrades/${VERSION}/bin
COPY --from=builder /app/zkcloudd /app/cosmovisor/upgrades/${VERSION}/bin/zkcloudd

# Copy scripts into the final image.
COPY ./container/entrypoint.sh /entrypoint.sh
COPY ./scripts/init.sh /init.sh
COPY ./scripts/testnet-multi-node.sh /testnet-multi-node.sh
RUN chmod +x /entrypoint.sh /init.sh /app/cosmovisor/upgrades/${VERSION}/bin/zkcloudd

# Set the current link of cosmovisor to previous release because this is the version that is live
RUN ln -s /app/cosmovisor/genesis /app/cosmovisor/current

# Link the newest binary to /app/gevulotd, to make it easier to use
RUN ln -s /app/cosmovisor/upgrades/${VERSION}/bin/${DAEMON_NAME} /app/${DAEMON_NAME}

# Set the working directory to the home directory.
WORKDIR ${ZKCLOUD_HOME}

# Expose ports:
# 1317 is the default API server port.
# 9090 is the default GRPC server port.
# 26656 is the default node p2p port.
# 26657 is the default RPC port.
# 26660 is the port used for Prometheus.
# 26661 is the port used for tracing.
EXPOSE 1317 9090 26656 26657 26660 26661
ENTRYPOINT [ "/usr/bin/catatonit", "--", "/entrypoint.sh" ]
