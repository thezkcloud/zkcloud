---
name: Build and Push Container

on:
  push:
    branches: [main,v*]
    tags: [v*]
  pull_request:
  workflow_dispatch:
    inputs:
      ref:
        description: "The checkout reference (ie tag, branch, sha)"
        required: true
        type: string

env:
  REGISTRY: quay.io
  IMAGE_NAME: thezkcloud/node

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Debug Git Info
        run: |
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Ref Name: ${{ github.ref_name }}"
          echo "GitHub Ref Type: ${{ github.ref_type }}"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Tags pointing at current commit:"
          git tag --points-at HEAD
          echo "git describe output:"
          git describe --tags || echo "git describe failed"

      - name: Get previous version
        id: previous_version
        run: |
          PREVIOUS_VERSION=$(curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/thezkcloud/zkcloud/releases/latest | jq -r .name)
          echo "version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT

      - name: Set version
        id: set_version
        run: |
          # Try to get the tag pointing to the current commit
          TAG=$(git tag --points-at HEAD)
          if [[ -n "$TAG" ]]; then
            echo "version=$TAG" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi

      - name: Debug version
        run: |
          echo "Using version: ${{ steps.set_version.outputs.version }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to Quay
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_SECRET_KEY }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Image
        uses: docker/build-push-action@v6
        id: build-image
        with:
          build-args: |
            TARGETOS=linux
            TARGETARCH=amd64
            VERSION=${{ steps.set_version.outputs.version }}
            PREVIOUS_VERSION=${{ steps.previous_version.outputs.version }}
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: ./container/Containerfile
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
